.. DO NOT EDIT THIS FILE DIRECTLY!!!  Edit the template in ci/templates/README.rst
.. and then regenerate this file by running the ci/bootstrap.py script.
..
===============================
Cookiecutter: F Prime Component
===============================

**WARNING:** This template uses the dictionary feature, which requires cookiecutter 1.5.0 or higher, *AND* there is a bug that requires ``click`` to be less than version 8.0.0.
For more information, see Cookiecutter_ `GitHub issue # 1558 <https://github.com/cookiecutter/cookiecutter/issues/1558>`_.
To install a compatible version of ``click``:
::

  pip install click==7.1.2

Cookiecutter_ template for a `F Prime`_ deployment, to help with reducing the copy-pasta effect while creating new deployments.
There are just enough pieces to remember to change/fix, that it is rather challenging to do without a template.
So here is a template to fill in all the major adjustments, so you can spend time developing a deployment or writing a component instead of scratching your head over why you get weird errors.

This template currently supports only "F Prime as a library" style deployements where F Prime is probably a git submodule in the project.
If enough interest is generated for the old-style clone-and-own deplyments, we will look into adding that support.

.. contents:: Table of Contents

Features
--------

* Working deployment created by running the Cookiecutter_.
* Options to include or exclude several F Prime services, like health pinging.
* Creates a single deployment-owned component, especially useful for excercising a utility component that is under development.
* Choice of multiple target platforms for platform specific tweaks.
* Option to generate an Arduino platfrom deployment.
* Choice of various licenses.

Requirements
------------

Projects using this template have these minimal dependencies:

* Cookiecutter_ - just for creating the project

To get quickly started on a new system, just install Cookiecutter_. You
should do this in your ``fprime-venv``.  To install it, just run this
in your shell or command prompt, within the ``venv`` environment::

  pip install cookiecutter click==7.1.2

Usage and options
-----------------

This template is intended to make it easy to generate all the boilerplate required for a `F Prime`_ deployment and a single component internal to that deployment.
A collection of components along with a mission/project configuration [deployment] completes the framework to fill out a robotic software project; e.g.: a balloon payload, an wheeled rover, or maybe a satellite.

First navigate to the directory where you want to add your deployment.
The template is going to create the folder containing your component in the current directory (you should *not* try to create the folder ahead of the template).
Next, generate the deployment's boilerplate::

  cookiecutter gh:SterlingPeet/cookiecutter-fprime-deployment

You will be asked for these fields:

.. list-table::
    :header-rows: 1

    * - Template variable
      - Default
      - Description

{% for field, contents in variables_table.items() %}
    * - ``{{ field }}``
      - .. code:: python

            "{{ contents.default_value }}"

      - {{ contents.help }}

{% endfor %}

You should now have a basic deployment that can be compiled and run.

If you want to add components to the deployment, you can do that next.
This can be done by adding a line like this, near the bottom of the deployment's ``CMakeLists.txt`` file::

  add_fprime_subdirectory("${CMAKE_CURRENT_LIST_DIR}/../Prjct/Grp/MyExample")

Then you need to (possibly purge) and generate the new cmake config in that deployment::

  fprime-util generate
  fprime-util build

Now you should be able to run the executable from the build folder.


Changelog
---------

See `CHANGELOG.rst <https://github.com/SterlingPeet/cookiecutter-fprime-component/tree/master/CHANGELOG.rst>`_.

.. _Cookiecutter: https://github.gatech.edu/audreyr/cookiecutter
.. _F Prime: https://github.com/nasa/fprime/
.. _slug: https://en.wikipedia.org/wiki/Clean_URL#Slug

